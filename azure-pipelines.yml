# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
  - name: target
    displayName: Test target
    type: string
  - name: suite
    displayName: test suite
    type: string
  - name: runner
    displayName: Runner
    values:
      - macos-11
      - ubuntu-latest
  - name: binaries
    displayName: Binary URL
    type: string
  - name: nativeLibs
    displayName: Native libs
    type: string
  - name: binaryName
    displayName: Binary Name
    type: string
  - name: testImageName
    displayName: Native libs name
    type: string

trigger:
- main

pool:
${{ if eq(parameters.runner, 'macos-11') }}:
  vmImage: macos-11

${{ if eq(parameters.runner, 'ubuntu-latest') }}:
  vmImage: ubuntu-latest

steps:
- bash: |
    wget ${{ parameters.binaries }} && wget ${{ parameters.nativeLibs }}
  displayName: 'Download binaires'
  workingDirectory: $(Agent.BuildDirectory)

- bash: |
    tar xvf ${{ parameters.binaryName }} && \
    tar xvf ${{ parameters.testImageName }}
  displayName: de-compress binaires and images
  workingDirectory: $(Agent.BuildDirectory)

- bash: |
    echo "##vso[task.setvariable variable=TEST_JDK_HOME;]$(Agent.BuildDirectory)/jdk-11.0.17+8"
    echo "##vso[task.setvariable variable=TESTIMAGE_PATH;]$(Agent.BuildDirectory)/jdk-11.0.17+8-test-image"
  displayName: Set JDK variables

- bash: |
    git clone --depth 1 -b v0.9.5-release https://github.com/adoptium/aqa-tests.git && \
    cd aqa-tests/ && \
    ./get.sh && \
    ./compile.sh
  displayName: Clone aqa-tests
  env:
    USE_TESTENV_PROPERTIES: true
    BUILD_LIST: ${{ parameters.suite }}
    DISPLAY: ":1"
    JDK_IMPL: hotspot

